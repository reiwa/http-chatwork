// Generated by CoffeeScript 1.10.0
(function() {
  var HTTPChatwork, Observable, makeHTTPChatworkDriver, makeHTTPDriver;

  Observable = require('rx').Observable;

  makeHTTPDriver = require('@cycle/http').makeHTTPDriver;

  makeHTTPChatworkDriver = function(token) {
    var HTTP;
    HTTP = makeHTTPDriver();
    return function(res) {
      return HTTP(res.map(function(o) {
        return {
          headers: {
            'X-ChatWorkToken': token
          },
          method: o.method,
          url: 'https://api.chatwork.com/v1/' + (Array.isArray(o.endpoint) ? o.endpoint.join('/') : o.endpoint)
        };
      })).filter(function(o) {
        return true;
      }).mergeAll().map(function(o) {
        return o.body;
      });
    };
  };

  HTTPChatwork = function(token) {
    var http, send;
    http = makeHTTPChatworkDriver(token);
    send = function(o) {
      var observable;
      observable = o.observable ? o.observable : Observable.just('chatwork.com');
      return http(observable.map(function() {
        return {
          method: o.method,
          endpoint: o.endpoint
        };
      }));
    };
    return {
      get: {
        me: {
          from: function(observable) {
            return send({
              method: 'GET',
              endpoint: ['me'],
              observable: observable
            });
          }
        },
        my: {
          status: {
            from: function(observable) {
              return send({
                method: 'GET',
                endpoint: ['my', 'status'],
                observable: observable
              });
            }
          },
          tasks: {
            from: function(observable) {
              return send({
                method: 'GET',
                endpoint: ['my', 'tasks'],
                observable: observable
              });
            },
            query: function(query) {
              return {
                from: function(observable) {
                  return send({
                    method: 'GET',
                    endpoint: ['my', 'tasks'],
                    query: query,
                    observable: observable
                  });
                }
              };
            }
          }
        },
        contacts: {
          from: function(observable) {
            return send({
              method: 'GET',
              endpoint: ['contacts'],
              observable: observable
            });
          }
        },
        rooms: {
          from: function(observable) {
            return send({
              method: 'GET',
              endpoint: ['rooms'],
              observable: observable
            });
          },
          room_id: function(room_id) {
            return {
              from: function(observable) {
                return send({
                  method: 'GET',
                  endpoint: ['rooms', room_id],
                  observable: observable
                });
              },
              members: {
                from: function(observable) {
                  return send({
                    method: 'GET',
                    endpoint: ['rooms', room_id, 'members'],
                    observable: observable
                  });
                }
              },
              messages: {
                from: function(observable) {
                  return send({
                    method: 'GET',
                    endpoint: ['rooms', room_id, 'messages'],
                    observable: observable
                  });
                },
                query: function(query) {
                  return {
                    from: function(observable) {
                      return send({
                        method: 'GET',
                        endpoint: ['rooms', room_id, 'messages'],
                        query: query,
                        observable: observable
                      });
                    }
                  };
                },
                messages_id: function(messages_id) {
                  return {
                    from: function(observable) {
                      return send({
                        method: 'GET',
                        endpoint: ['rooms', room_id, 'messages', messages_id],
                        observable: observable
                      });
                    }
                  };
                }
              },
              tasks: {
                from: function(observable) {
                  return send({
                    method: 'GET',
                    endpoint: ['rooms', room_id, 'tasks'],
                    observable: observable
                  });
                },
                query: function(query) {
                  return {
                    from: function(observable) {
                      return send({
                        method: 'GET',
                        endpoint: ['rooms', room_id, 'tasks'],
                        query: query,
                        observable: observable
                      });
                    }
                  };
                },
                task_id: function(task_id) {
                  return {
                    from: function(observable) {
                      return send({
                        method: 'GET',
                        endpoint: ['rooms', room_id, 'tasks', task_id],
                        observable: observable
                      });
                    }
                  };
                }
              },
              files: {
                from: function(observable) {
                  return send({
                    method: 'GET',
                    endpoint: ['rooms', room_id, 'files'],
                    observable: observable
                  });
                },
                query: function(query) {
                  return {
                    from: function(observable) {
                      return send({
                        method: 'GET',
                        endpoint: ['rooms', room_id, 'files'],
                        query: query,
                        observable: observable
                      });
                    }
                  };
                },
                file_id: function(file_id) {
                  return {
                    from: function(observable) {
                      return send({
                        method: 'GET',
                        endpoint: ['rooms', room_id, 'files', file_id],
                        observable: observable
                      });
                    },
                    query: function(query) {
                      return {
                        from: function(observable) {
                          return send({
                            method: 'GET',
                            endpoint: ['rooms', room_id, 'files', file_id],
                            query: query,
                            observable: observable
                          });
                        }
                      };
                    }
                  };
                }
              }
            };
          }
        },
        endpoint: function(endpoint) {
          return {
            from: function(observable) {
              return send({
                method: 'GET',
                endpoint: endpoint,
                observable: observable
              });
            },
            query: function(query) {
              return {
                from: function(observable) {
                  return send({
                    method: 'GET',
                    endpoind: endpoint,
                    query: query,
                    observable: observable
                  });
                }
              };
            }
          };
        }
      },
      post: {
        rooms: {
          query: function(query) {
            return {
              from: function(observable) {
                return send({
                  method: 'POST',
                  endpoint: ['rooms'],
                  query: query,
                  observable: observable
                });
              }
            };
          },
          room_id: function(room_id) {
            return {
              messages: {
                query: function(query) {
                  return {
                    from: function(observable) {
                      return send({
                        method: 'POST',
                        endpoint: ['rooms', room_id, 'messages'],
                        query: query,
                        observable: observable
                      });
                    }
                  };
                }
              },
              tasks: {
                query: function(query) {
                  return {
                    from: function(observable) {
                      return send({
                        method: 'POST',
                        endpoint: ['rooms', room_id, 'tasks'],
                        query: query,
                        observable: observable
                      });
                    }
                  };
                }
              }
            };
          }
        },
        endpoint: function(endpoint) {
          return {
            from: function(observable) {
              return send({
                method: 'POST',
                endpoint: endpoint,
                observable: observable
              });
            },
            query: function(query) {
              return {
                from: function(observable) {
                  return send({
                    method: 'POST',
                    endpoint: endpoint,
                    query: query,
                    observable: observable
                  });
                }
              };
            }
          };
        }
      },
      put: {
        rooms: {
          room_id: function(room_id) {
            return {
              from: function(observable) {
                return send({
                  method: 'PUT',
                  endpoint: ['rooms', room_id],
                  observable: observable
                });
              },
              query: function(query) {
                return {
                  from: function(observable) {
                    return send({
                      method: 'PUT',
                      endpoint: ['rooms', room_id],
                      query: query,
                      observable: observable
                    });
                  }
                };
              },
              members: {
                query: function(query) {
                  return {
                    from: function(observable) {
                      return send({
                        method: 'PUT',
                        endpoint: ['rooms', room_id, 'members'],
                        query: query,
                        observable: observable
                      });
                    }
                  };
                }
              }
            };
          }
        },
        endpoint: function(endpoint) {
          return {
            from: function(observable) {
              return send({
                method: 'PUT',
                endpoint: endpoint,
                observable: observable
              });
            },
            query: function(query) {
              return {
                from: function(observable) {
                  return send({
                    method: 'PUT',
                    endpoint: endpoint,
                    query: query,
                    observable: observable
                  });
                }
              };
            }
          };
        }
      },
      "delete": {
        rooms: {
          room_id: function(room_id) {
            return {
              query: function(query) {
                return {
                  from: function(observable) {
                    return send({
                      method: 'DELETE',
                      endpoint: ['rooms', room_id],
                      query: query,
                      observable: observable
                    });
                  }
                };
              }
            };
          }
        },
        endpoint: function(endpoint) {
          return {
            from: function(observable) {
              return send({
                method: 'DELETE',
                endpoint: endpoint,
                observable: observable
              });
            },
            query: function(query) {
              return {
                from: function(observable) {
                  return send({
                    method: 'DELETE',
                    endpoint: endpoint,
                    query: query,
                    observable: observable
                  });
                }
              };
            }
          };
        }
      }
    };
  };

  exports.makeHTTPChatworkDriver = makeHTTPChatworkDriver;

  exports.HTTPChatwork = HTTPChatwork;

}).call(this);
